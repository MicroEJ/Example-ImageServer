<!--
	Ivy
 
 	Copyright 2018-2022 MicroEJ Corp. All rights reserved.
 	Use of this source code is governed by a BSD-style license that can be found with this software.
--> 
<ivy-module version="2.0" xmlns:ea="http://www.easyant.org" xmlns:m="http://ant.apache.org/ivy/extra" xmlns:ej="https://developer.microej.com" ej:version="2.0.0"> 
	<info organisation="com.microej.example" module="image-server" status="integration" revision="1.2.0">
		<ea:build organisation="com.is2t.easyant.buildtypes" module="build-microej-javalib" revision="5.0.+">
		</ea:build>
	</info>
    
	<configurations defaultconfmapping="default->default;provided->provided;vdruntime->default">
		<conf name="default" visibility="public" description="Runtime dependencies to other artifacts"/>
		<conf name="provided" visibility="public" description="Compile-time dependencies to APIs provided by the platform"/>
		<conf name="vdruntime" visibility="public" description="Dependency needed only by the the player"/>
		<conf name="platform" visibility="private" description="Build-time dependency, specify the platform to use"/>
		<conf name="documentation" visibility="public" description="Documentation related to the artifact (javadoc, PDF)"/>
		<conf name="source" visibility="public" description="Source code"/>
		<conf name="dist" visibility="public" description="Contains extra files like README.md, licenses"/>
		<conf name="test" visibility="private" description="Dependencies for test execution. It is not required for normal use of the application, and is only available for the test compilation and execution phases."/>
	</configurations>
    	
	<publications>
		<!-- keep this empty if no specific artifact to publish -->
		<!-- must be here in order to avoid all configurations for the default artifact -->
	</publications>
	
	<dependencies>
		<!-- 
			Put MicroEJ API dependencies to the "provided->*" configuration
			Other regular runtime dependencies are in the "default" configuration  
		-->
		<dependency org="ej.api" name="edc" rev="1.3.3"/> <!-- max existing in Central Repo -->
		<dependency org="ej.api" name="bon" rev="1.4.0"/> <!-- max existing in Central Repo -->
		<dependency org="ej.api" name="net" rev="1.1.2"/> <!-- max existing in Central Repo -->	
		<dependency org="ej.api" name="microui" rev="3.0.4"/> <!-- max possible in WROVER -->
		
		<dependency org="ej.library.eclasspath" name="logging" rev="1.2.0"/> <!-- max existing in Central Repo -->

		<!-- Dependencies used for MultiSandboxed support (currently none) -->
		
        <!-- Addon Libraries used for the example -->
		<dependency org="ej.library.iot" name="net-util" rev="1.4.0"/> <!-- max existing in Central Repo -->
		<dependency org="ej.library.iot" name="wifi-util" rev="2.1.0" /> <!-- max existing in Central Repo --> 
		<dependency org="ej.library.iot" name="hoka" rev="6.0.0"/> <!-- max possible because of restserver 5.0.0 -->
		<dependency org="ej.library.iot" name="restserver" rev="5.0.0"/> <!-- max existing in Central Repo -->
		
		<dependency org="ej.library.runtime" name="service" rev="1.1.1"/> <!-- max existing in Central Repo -->		
		<dependency org="org.json.me" name="json" rev="1.3.0"/> <!-- max existing in Central Repo -->

		<!-- This is used in case the application is run in standalone, in a multiapp firmware, the Connectivity Manager is provided by the firmware. -->
		<dependency org="ej.library.iot" name="connectivity" rev="2.1.0" />			
	</dependencies>
</ivy-module>
